version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  static_volume:
  media_volume:

services:
  django:
    build:
      context: .
      dockerfile: ./app/docker/django/Dockerfile.prod
    image: django_production
    command: /usr/src/app/docker/django/start_production
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    env_file:
      - ./app/.envs/.production/.env
    depends_on:
      - postgres

  postgres:
    build:
      context: .
      dockerfile: ./app/docker/postgres/Dockerfile
    image: webapp_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./app/.envs/.production/.env

  nginx:
    build: ./nginx
    restart: unless-stopped
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - "8001:8001"
    depends_on:
      - django

  traefik:
    build:
      context: .
      dockerfile: ./app/docker/traefik/Dockerfile
    image: webapp_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:5.0

  awscli:
    build:
      context: .
      dockerfile: ./app/docker/aws/Dockerfile
    env_file:
      - ./app/.envs/.production/.env
    volumes:
      - production_postgres_data_backups:/backups:z
